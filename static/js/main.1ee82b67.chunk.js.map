{"version":3,"sources":["components/toDoItem.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","isDone","setIsDone","useState","React","createElement","onClick","event","prevValue","style","textDecoration","text","App","inputText","setInputText","items","setItems","addItem","prevItems","className","onChange","newValue","target","value","onKeyDown","key","type","map","todoItem","ReactDOM","render","document","getElementById"],"mappings":"0JAoBeA,MAlBf,SAAkBC,GAChB,MAAOC,EAAQC,GAAaC,oBAAS,GAQrC,OACEC,IAAAC,cAAA,OAAKC,QAPP,SAAqBC,GACnBL,EAAWM,IACDA,KAMRJ,IAAAC,cAAA,MAAII,MAAO,CAAEC,eAAgBT,EAAS,eAAiB,SACpDD,EAAMW,QCgCAC,MA3Cf,WACE,MAAOC,EAAWC,GAAgBX,mBAAS,KACpCY,EAAOC,GAAYb,mBAAS,IAOnC,SAASc,IACPD,EAAUE,GACD,IAAIA,EAAWL,IAExBC,EAAa,IAQf,OACEV,IAAAC,cAAA,OAAKc,UAAU,aACbf,IAAAC,cAAA,OAAKc,UAAU,WACbf,IAAAC,cAAA,UAAI,eAEND,IAAAC,cAAA,OAAKc,UAAU,QACbf,IAAAC,cAAA,SAAOe,SAvBb,SAAsBb,GACpB,MAAMc,EAAWd,EAAMe,OAAOC,MAC9BT,EAAaO,IAqBsBG,UAZrC,SAAwBjB,GACJ,UAAdA,EAAMkB,KACRR,KAU4DS,KAAK,OAAOH,MAAOV,IAC7ET,IAAAC,cAAA,UAAQC,QAASW,GACfb,IAAAC,cAAA,YAAM,SAGVD,IAAAC,cAAA,WACED,IAAAC,cAAA,UACGU,EAAMY,IAAKC,GACVxB,IAAAC,cAACN,EAAQ,CAACY,KAAMiB,S,KCjC5BC,IAASC,OAAO1B,IAAAC,cAACO,EAAG,MAAKmB,SAASC,eAAe,U","file":"static/js/main.1ee82b67.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction ToDoItem(props) {\r\n  const [isDone, setIsDone] = useState(false);\r\n\r\n  function handleClick(event) {\r\n    setIsDone((prevValue) => {\r\n      return !prevValue;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div onClick={handleClick}>\r\n      <li style={{ textDecoration: isDone ? \"line-through\" : \"none\" }}>\r\n        {props.text}\r\n      </li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React, { useState } from \"react\";\r\nimport ToDoItem from \"./toDoItem\";\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n\r\n  function handleChange(event) {\r\n    const newValue = event.target.value;\r\n    setInputText(newValue);\r\n  }\r\n\r\n  function addItem() {\r\n    setItems((prevItems) => {\r\n      return [...prevItems, inputText];\r\n    });\r\n    setInputText(\"\");\r\n  }\r\n  function handleKeyPress(event) {\r\n    if (event.key === \"Enter\") {\r\n      addItem();\r\n    }    \r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"heading\">\r\n        <h1>To-Do List</h1>\r\n      </div>\r\n      <div className=\"form\">\r\n        <input onChange={handleChange} onKeyDown={handleKeyPress} type=\"text\" value={inputText} />\r\n        <button onClick={addItem}>\r\n          <span>Add</span>\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <ul>\r\n          {items.map((todoItem) => (\r\n            <ToDoItem text={todoItem} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}